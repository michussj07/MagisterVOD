import { EventEmitter, TemplateRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DraggableItem } from './draggable-item';
import { DraggableItemService } from './draggable-item.service';
import * as ɵngcc0 from '@angular/core';
export declare class SortableComponent implements ControlValueAccessor {
    private static globalZoneIndex;
    /** field name if input array consists of objects */
    fieldName: string;
    /** class name for items wrapper */
    wrapperClass: string;
    /** style object for items wrapper */
    wrapperStyle: {
        [key: string]: string;
    };
    /** class name for item */
    itemClass: string;
    /** style object for item */
    itemStyle: {
        [key: string]: string;
    };
    /** class name for active item */
    itemActiveClass: string;
    /** style object for active item */
    itemActiveStyle: {
        [key: string]: string;
    };
    /** class name for placeholder */
    placeholderClass: string;
    /** style object for placeholder */
    placeholderStyle: {
        [key: string]: string;
    };
    /** placeholder item which will be shown if collection is empty */
    placeholderItem: string;
    /** used to specify a custom item template. Template variables: item and index; */
    itemTemplate: TemplateRef<any>;
    /** fired on array change (reordering, insert, remove), same as <code>ngModelChange</code>.
     *  Returns new items collection as a payload.
     */
    onChange: EventEmitter<any[]>;
    showPlaceholder: boolean;
    activeItem: number;
    items: SortableItem[];
    onTouched: any;
    onChanged: any;
    private transfer;
    private currentZoneIndex;
    private _items;
    constructor(transfer: DraggableItemService);
    onItemDragstart(event: DragEvent, item: SortableItem, i: number): void;
    onItemDragover(event: DragEvent, i: number): void;
    cancelEvent(event: DragEvent): void;
    onDrop(item: DraggableItem): void;
    resetActiveItem(event: DragEvent): void;
    registerOnChange(callback: () => void): void;
    registerOnTouched(callback: () => void): void;
    writeValue(value: any[]): void;
    updatePlaceholderState(): void;
    getItemStyle(isActive: boolean): {};
    private initDragstartEvent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SortableComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SortableComponent, "bs-sortable", ["bs-sortable"], {
    "wrapperClass": "wrapperClass";
    "wrapperStyle": "wrapperStyle";
    "itemClass": "itemClass";
    "itemStyle": "itemStyle";
    "itemActiveClass": "itemActiveClass";
    "itemActiveStyle": "itemActiveStyle";
    "placeholderClass": "placeholderClass";
    "placeholderStyle": "placeholderStyle";
    "placeholderItem": "placeholderItem";
    "fieldName": "fieldName";
    "itemTemplate": "itemTemplate";
}, {
    "onChange": "onChange";
}, never>;
}
export declare interface SortableItem {
    id: number;
    value: string;
    initData: any;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydGFibGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNvcnRhYmxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3REEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IERyYWdnYWJsZUl0ZW0gfSBmcm9tICcuL2RyYWdnYWJsZS1pdGVtJztcbmltcG9ydCB7IERyYWdnYWJsZUl0ZW1TZXJ2aWNlIH0gZnJvbSAnLi9kcmFnZ2FibGUtaXRlbS5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNvcnRhYmxlQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xuICAgIHByaXZhdGUgc3RhdGljIGdsb2JhbFpvbmVJbmRleDtcbiAgICAvKiogZmllbGQgbmFtZSBpZiBpbnB1dCBhcnJheSBjb25zaXN0cyBvZiBvYmplY3RzICovXG4gICAgZmllbGROYW1lOiBzdHJpbmc7XG4gICAgLyoqIGNsYXNzIG5hbWUgZm9yIGl0ZW1zIHdyYXBwZXIgKi9cbiAgICB3cmFwcGVyQ2xhc3M6IHN0cmluZztcbiAgICAvKiogc3R5bGUgb2JqZWN0IGZvciBpdGVtcyB3cmFwcGVyICovXG4gICAgd3JhcHBlclN0eWxlOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIC8qKiBjbGFzcyBuYW1lIGZvciBpdGVtICovXG4gICAgaXRlbUNsYXNzOiBzdHJpbmc7XG4gICAgLyoqIHN0eWxlIG9iamVjdCBmb3IgaXRlbSAqL1xuICAgIGl0ZW1TdHlsZToge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgICAvKiogY2xhc3MgbmFtZSBmb3IgYWN0aXZlIGl0ZW0gKi9cbiAgICBpdGVtQWN0aXZlQ2xhc3M6IHN0cmluZztcbiAgICAvKiogc3R5bGUgb2JqZWN0IGZvciBhY3RpdmUgaXRlbSAqL1xuICAgIGl0ZW1BY3RpdmVTdHlsZToge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgICAvKiogY2xhc3MgbmFtZSBmb3IgcGxhY2Vob2xkZXIgKi9cbiAgICBwbGFjZWhvbGRlckNsYXNzOiBzdHJpbmc7XG4gICAgLyoqIHN0eWxlIG9iamVjdCBmb3IgcGxhY2Vob2xkZXIgKi9cbiAgICBwbGFjZWhvbGRlclN0eWxlOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIC8qKiBwbGFjZWhvbGRlciBpdGVtIHdoaWNoIHdpbGwgYmUgc2hvd24gaWYgY29sbGVjdGlvbiBpcyBlbXB0eSAqL1xuICAgIHBsYWNlaG9sZGVySXRlbTogc3RyaW5nO1xuICAgIC8qKiB1c2VkIHRvIHNwZWNpZnkgYSBjdXN0b20gaXRlbSB0ZW1wbGF0ZS4gVGVtcGxhdGUgdmFyaWFibGVzOiBpdGVtIGFuZCBpbmRleDsgKi9cbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgLyoqIGZpcmVkIG9uIGFycmF5IGNoYW5nZSAocmVvcmRlcmluZywgaW5zZXJ0LCByZW1vdmUpLCBzYW1lIGFzIDxjb2RlPm5nTW9kZWxDaGFuZ2U8L2NvZGU+LlxuICAgICAqICBSZXR1cm5zIG5ldyBpdGVtcyBjb2xsZWN0aW9uIGFzIGEgcGF5bG9hZC5cbiAgICAgKi9cbiAgICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueVtdPjtcbiAgICBzaG93UGxhY2Vob2xkZXI6IGJvb2xlYW47XG4gICAgYWN0aXZlSXRlbTogbnVtYmVyO1xuICAgIGl0ZW1zOiBTb3J0YWJsZUl0ZW1bXTtcbiAgICBvblRvdWNoZWQ6IGFueTtcbiAgICBvbkNoYW5nZWQ6IGFueTtcbiAgICBwcml2YXRlIHRyYW5zZmVyO1xuICAgIHByaXZhdGUgY3VycmVudFpvbmVJbmRleDtcbiAgICBwcml2YXRlIF9pdGVtcztcbiAgICBjb25zdHJ1Y3Rvcih0cmFuc2ZlcjogRHJhZ2dhYmxlSXRlbVNlcnZpY2UpO1xuICAgIG9uSXRlbURyYWdzdGFydChldmVudDogRHJhZ0V2ZW50LCBpdGVtOiBTb3J0YWJsZUl0ZW0sIGk6IG51bWJlcik6IHZvaWQ7XG4gICAgb25JdGVtRHJhZ292ZXIoZXZlbnQ6IERyYWdFdmVudCwgaTogbnVtYmVyKTogdm9pZDtcbiAgICBjYW5jZWxFdmVudChldmVudDogRHJhZ0V2ZW50KTogdm9pZDtcbiAgICBvbkRyb3AoaXRlbTogRHJhZ2dhYmxlSXRlbSk6IHZvaWQ7XG4gICAgcmVzZXRBY3RpdmVJdGVtKGV2ZW50OiBEcmFnRXZlbnQpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnlbXSk6IHZvaWQ7XG4gICAgdXBkYXRlUGxhY2Vob2xkZXJTdGF0ZSgpOiB2b2lkO1xuICAgIGdldEl0ZW1TdHlsZShpc0FjdGl2ZTogYm9vbGVhbik6IHt9O1xuICAgIHByaXZhdGUgaW5pdERyYWdzdGFydEV2ZW50O1xufVxuZXhwb3J0IGRlY2xhcmUgaW50ZXJmYWNlIFNvcnRhYmxlSXRlbSB7XG4gICAgaWQ6IG51bWJlcjtcbiAgICB2YWx1ZTogc3RyaW5nO1xuICAgIGluaXREYXRhOiBhbnk7XG59XG4iXX0=